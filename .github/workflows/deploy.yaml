name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build project
        run: ./gradlew build

      - name: Prepare SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Copy REPO_DEPLOY_KEY to server
        run: |
          echo "${{ secrets.REPO_DEPLOY_KEY }}" > repo_key_temp
          chmod 600 repo_key_temp
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
            -P ${{ secrets.SERVER_PORT }} \
            repo_key_temp \
            ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:~/.ssh/repo_key
          rm -f repo_key_temp

      - name: Copy JAR to server temporary location
        run: |
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -P ${{ secrets.SERVER_PORT }} \
            build/libs/masik.jar \
            ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/tmp/masik.jar

      - name: SSH into server and deploy
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} \
            ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e

            echo "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH..."
            mkdir -p ~/.ssh
            chmod 600 ~/.ssh/repo_key
            ssh-keyscan github.com >> ~/.ssh/known_hosts

            cd ~

            echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
            if [ -d MasikServer ] && [ ! -d MasikServer/.git ]; then
              echo "‚ö†Ô∏è –°–ª–æ–º–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ ‚Äî —É–¥–∞–ª—è—é MasikServer"
              rm -rf MasikServer
            fi

            if [ ! -d MasikServer ]; then
              echo "üì• –ö–ª–æ–Ω–∏—Ä—É—é —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
              GIT_SSH_COMMAND="ssh -i ~/.ssh/repo_key -o StrictHostKeyChecking=no" \
                git clone git@github.com:Pie-Roman/MasikServer.git
            else
              echo "üîÑ –ü—É–ª–ª —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
              cd MasikServer
              GIT_SSH_COMMAND="ssh -i ~/.ssh/repo_key -o StrictHostKeyChecking=no" \
                git fetch origin
                git reset --hard origin/main
              cd ..
            fi

            echo "üìÅ –ü–µ—Ä–µ–º–µ—â–∞—é jar-—Ñ–∞–π–ª..."
            mkdir -p ~/MasikServer/build/libs
            mv /tmp/masik.jar ~/MasikServer/build/libs/masik.jar

            cd ~/MasikServer

            echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
            if ! command -v docker > /dev/null 2>&1; then
              echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
            fi

            if ! command -v docker-compose > /dev/null 2>&1; then
              echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
                -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            if ! sudo docker info > /dev/null 2>&1; then
              echo "üöÄ –ó–∞–ø—É—Å–∫ Docker daemon..."
              sudo nohup dockerd > /dev/null 2>&1 &
              for i in {1..10}; do
                sleep 2
                if sudo docker info > /dev/null 2>&1; then
                  echo "‚úÖ Docker –≥–æ—Ç–æ–≤"
                  break
                fi
              done
            fi

            echo "üì¶ Docker Compose: –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞—é –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
            sudo docker-compose down || true
            sudo docker-compose up -d --build

            echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω"
          EOF
